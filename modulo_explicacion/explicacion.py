# modulo_explicacion/explicacion.py
from motor_inferencia.representacion import normalizar_lista

class ModuloExplicacion:
    def __init__(self, caso, similitud):
        self.caso = caso              # objeto Caso
        self.similitud = similitud    # valor entre 0 y 1

    def generar_explicacion(self, sintomas_usuario):
        sintomas_caso = set(normalizar_lista(self.caso.sintomas))
        sintomas_usuario = set(normalizar_lista(sintomas_usuario))

        coincidencias = sintomas_usuario.intersection(sintomas_caso)

        explicacion = "Hemos analizado los s√≠ntomas que proporcionaste y los comparamos con casos similares.\n"

        if coincidencias:
            explicacion += f"‚úî Los s√≠ntomas coinciden en: {', '.join(coincidencias)}.\n"
        else:
            explicacion += "‚ö† No se encontr√≥ ning√∫n s√≠ntoma que coincida con casos anteriores.\n"

        # A√±adir info de riesgo y derivaci√≥n
        if getattr(self.caso, "riesgo", None) and self.caso.riesgo != "desconocido":
            explicacion += f"\n‚ö† Nivel de riesgo identificado: {self.caso.riesgo.upper()}.\n"
        if getattr(self.caso, "derivar_a", []):
            explicacion += f"üëâ Se recomienda derivar a: {', '.join(self.caso.derivar_a)}.\n"
        if getattr(self.caso, "evaluaciones", []):
            explicacion += f"üìã Evaluaciones sugeridas: {', '.join(self.caso.evaluaciones)}.\n"

        explicacion += "\nTen en cuenta que esto es una gu√≠a y no sustituye la evaluaci√≥n directa de un profesional."
        return explicacion